#include <iostream>
#include"GP142.H"
#include "Header.h"
#include <fstream>
#include <math.h>
using namespace std;
void makerec(int a,int b,int c,int d,int i,int col)
{
	GP142_lineXY(col,a,b,c,b , i);
	GP142_lineXY(col,c,b,c,d , i);
	GP142_lineXY(col,c,d,a,d , i);
	GP142_lineXY(col,a,d,a,b , i);

}
void loadrec(fstream &ok)
{
	int a,b,c,d,col;
	ok>>col;
	ok>>a;
	ok>>b;
	ok>>c;
	ok>>d;
	
	GP142_lineXY(col, a,b,c,b, 3);
	GP142_lineXY(col, c,b,c,d, 3);
	GP142_lineXY(col, c,d,a,d, 3);
	GP142_lineXY(col, a,d,a,b, 3);
}
void loadtri(fstream &ok)
{
	int a,b,c,d,e,f,col;
	ok>>col;
	ok>>a;
	ok>>b;
	ok>>c;
	ok>>d;
	ok>>e;
	ok>>f;
	GP142_lineXY(col, a,b,c,d, 5);
	GP142_lineXY(col, c,d,e,f, 5);
	GP142_lineXY(col, e,f,a,b, 5);

}
void loadline(fstream &ok)
{
	int a,b,c,d,col;
	ok>>col;
	ok>>a;
	ok>>b;
	ok>>c;
	ok>>d;
	GP142_lineXY(col, a,b,c,d, 5);

}
void loadcir(fstream &ok)
{
	int col,a,b,r;
	ok>>col;
	ok>>a;
	ok>>b;
	ok>>r;
	GP142_circleXY (col,a,b,r);

}
void menu()
{
	GP142_lineXY(YELLOW,-250,220,-220,190, 2);
	makerec(-240,135,-225,115,2,5);
    makerec(-270,230,-200,180,6,5);
	makerec(-270,150,-200,100,6,5);
	makerec(-270,70,-200,20,6,5);
	makerec(-270,-10,-200,-60,6,5);
	makerec(-270,-90,-200,-140,6,5);
	makerec(270,200,260,190,10,1);
	makerec(250,200,240,190,10,2);
	makerec(270,180,260,170,10,3);
	makerec(250,180,240,170,10,4);
	makerec(270,160,260,150,10,5);
	makerec(250,160,240,150,10,6);
	makerec(270,140,260,130,10,7);
	makerec(250,140,240,130,9,8);
}
void del(shapes **p,int x1,int y1,fstream &sai,int a1,int b1,int c1,int d1,int x2)
{
	
	for (int i=0;i<5;i++)
	{
		
		if (p[i]->is_point_present(x1,y1)==true)
		{
			sai>>x2;
			sai>>a1;
			sai>>b1;
			sai>>c1;
			sai>>d1;
			GP142_lineXY(BLACK, a1,b1,c1,b1, 3);
			GP142_lineXY(BLACK, c1,b1,c1,d1, 3);
			GP142_lineXY(BLACK, c1,d1,a1,d1, 3);
			GP142_lineXY(BLACK, a1,d1,a1,b1, 3);
			delete []p[i];
		}
		else
		{
			sai>>x2;
			loadrec(sai);
			
		}

	}

}
int main()
{
	
	fstream fout("load.txt");
	shapes * all[100];
	int i=0;
	int co=5;
int quit;                   
int event;                  
int mouse_x, mouse_y;        
char key_pressed;           
int count=0;
int a,b,c,d,e,f,x=0;
bool mouse=false;
bool mouse1=false;
bool mouse2=false;
bool mouse3=false;
int z=0,n=0;
    GP142_open();
	
	
	
	menu();
	


    
    quit = FALSE;
while (!quit) {
        event = GP142_await_event(&mouse_x, &mouse_y, &key_pressed);
		
switch (event) {
case GP142_QUIT:
           quit = TRUE;
	
break;

case GP142_MOUSE:
	{
			if (mouse_x<-200 && mouse_x>-270 && mouse_y>180 && mouse_y<230)
			{
				
				mouse=true;
				mouse1=false;
				mouse2=false;
				mouse3=false;
			}
			else if (mouse_x<-200 && mouse_x>-270 && mouse_y>20 && mouse_y<70)
			{
				mouse1=true;
				mouse=false;
				mouse2=false;
				mouse3=false;
			}
			else if (mouse_x<-200 && mouse_x>-270 && mouse_y>100 && mouse_y<150)
			{
				mouse2=true;
				mouse=false;
				mouse1=false;
				mouse3=false;
			}
			else if (mouse_x<-200 && mouse_x>-270 && mouse_y>-60 && mouse_y<-10)
			{
				mouse3=true;
				mouse1=false;
				mouse=false;
				mouse2=false;
			}
			else if (mouse_x<275 && mouse_x>250 && mouse_y>185 && mouse_y<205)
			{
				co=1;
			}
			else if (mouse_x<250 && mouse_x>225 && mouse_y>185 && mouse_y<205)
			{
				co=2;
			}
			else if (mouse_x<275 && mouse_x>250 && mouse_y>165 && mouse_y<185)
			{
				co=3;
			}
			else if (mouse_x<250 && mouse_x>225 && mouse_y>165 && mouse_y<185)
			{
				co=4;
			}
			else if (mouse_x<275 && mouse_x>250 && mouse_y>145 && mouse_y<165)
			{
				co=5;
			}
			else if (mouse_x<250 && mouse_x>225 && mouse_y>145 && mouse_y<165)
			{
				co=6;
			}
			else if (mouse_x<275 && mouse_x>250 && mouse_y>125 && mouse_y<145)
			{
				co=7;
			}
			else if (mouse_x<250 && mouse_x>225 && mouse_y>125 && mouse_y<145)
			{
				co=8;
			}
			else if (mouse_x<-200 && mouse_x>-270 && mouse_y>-140 && mouse_y<-90)
			{
				
				while (fout.good())
				{
					int x;
					fout>>x;
					if (x==1)
					{
						loadline(fout);
					}
					else if (x==2)
					{
						loadtri(fout);
					}
					else if (x==3)
					{
						loadrec(fout);
					}
					else if (x==4)
					{
						loadcir(fout);
					}
					
				}
				fout.clear();
			}
			
			
			else if (mouse==true)
			{
				
				if (count==0) 
				{
					fout<<1<<endl;
					fout<<co<<endl;
					a=mouse_x;
					b=mouse_y;
					fout<<a<<endl;
					fout<<b<<endl;
					count++;
					break;
				}
			
				else if (count==1)
				{
					c=mouse_x;
					d=mouse_y;
					fout<<c<<endl;
					fout<<d<<endl;
					all[i]=new line(a,b,c,d,co);
					all[i]->draw();
					i++;
					count=0;
				}
			}
			else if (mouse1==true)
			{
				if (count==0) 
				{
					fout<<2<<endl;
					fout<<co<<endl;
					a=mouse_x;
					b=mouse_y;
					fout<<a<<endl;
					fout<<b<<endl;
					count++;
					break;
				}
			
				else if (count==1)
				{
					c=mouse_x;
					d=mouse_y;
					fout<<c<<endl;
					fout<<d<<endl;
					count++;
				}
				else if (count==2)
				{
					e=mouse_x;
					f=mouse_y;
					fout<<e<<endl;
					fout<<f<<endl;
					all[i]=new triangle(a,b,c,d,e,f,co);
					all[i]->draw();
					i++;
					count=0;
				}

			}
			else if (mouse2==true)
			{
				if (count==0) 
				{
					fout<<3<<endl;
					fout<<co<<endl;
					a=mouse_x;
					b=mouse_y;
					fout<<a<<endl;
					fout<<b<<endl;
					count++;
					break;
				}
			
				else if (count==1)
				{
					c=mouse_x;
					d=mouse_y;
					fout<<c<<endl;
					fout<<d<<endl;
					all[i]=new rectangle(a,b,c,d,co);
					all[i]->draw();
					i++;
					count=0;
				}
				
			}
			else if (mouse3==true)
			{
				
				if (count==0) 
				{
					fout<<4<<endl;
					fout<<co<<endl;
					a=mouse_x;
					b=mouse_y;
					fout<<a<<endl;
					fout<<b<<endl;
					count++;
					break;
				}
			
				else if (count==1)
				{
					c=mouse_x;
					d=mouse_y;
					all[i]=new circle(a,b,c,d,co);
					int r;
					r=(((c-a)*(c-a)+(b-d)*(b-d)));
					r=pow(r,.5);
					fout<<r<<endl;
					all[i]->draw();
					i++;
					count=0;
				}

			}
	}			
break;
case GP142_KBD:

 break;
default:
break;
        }  

    }  

    GP142_close();



	
	
}



